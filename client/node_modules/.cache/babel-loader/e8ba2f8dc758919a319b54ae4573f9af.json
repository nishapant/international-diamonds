{"ast":null,"code":"var _jsxFileName = \"/Users/nishapant/Documents/international_diamonds/client/src/components/Navbar/Navbar.js\";\nimport React, { useEffect, useState } from 'react';\nimport { number, string, func, oneOfType, bool, oneOf } from 'prop-types';\nimport { Popover } from 'antd';\nimport throttle from 'lodash.throttle';\n\nconst ResponsiveAntMenu = props => {\n  const {\n    children: MenuMarkup,\n    activeLinkKey,\n    menuClassName: className,\n    theme,\n    mode,\n    mobileMenuContent,\n    placement,\n    popoverTrigger,\n    throttleViewportChange,\n    mobileBreakPoint,\n    closeOnClick\n  } = props;\n  const [viewportWidth, setViewportWidth] = useState(0);\n  const [isMenuShown, setIsMenuShown] = useState(false);\n\n  const isMobile = () => viewportWidth < mobileBreakPoint;\n\n  const onLinkClick = () => () => isMobile() && closeOnClick ? setIsMenuShown(false) : null;\n\n  useEffect(() => {\n    setViewportWidth(window.innerWidth);\n    const throttledSetViewPortWidth = throttle(() => setViewportWidth(window.innerWidth), throttleViewportChange);\n    window.addEventListener('resize', throttledSetViewPortWidth);\n    return () => window.removeEventListener('resize', throttledSetViewPortWidth);\n  }, []);\n  const MenuMarkupConfig = {\n    theme: !theme ? 'light' : typeof theme === 'function' ? theme(isMobile()) : theme,\n    mode: !mode ? 'horizontal' : typeof mode === 'function' ? mode(isMobile()) : mode,\n    selectedKeys: [`${activeLinkKey}`],\n    className\n  };\n  const menuToRender = React.cloneElement(MenuMarkup(onLinkClick()), MenuMarkupConfig);\n  return isMobile() ? /*#__PURE__*/React.createElement(Popover, {\n    content: menuToRender,\n    trigger: popoverTrigger,\n    placement: placement,\n    visible: isMenuShown,\n    onVisibleChange: setIsMenuShown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, mobileMenuContent(isMenuShown)) : menuToRender;\n};\n\nResponsiveAntMenu.propTypes = {\n  children: func.isRequired,\n  mobileBreakPoint: number,\n  closeOnMobileLinkClick: bool,\n  throttleViewportChange: number,\n  activeLinkKey: string,\n  placement: string,\n  theme: func,\n  mode: oneOfType([func, string]),\n  mobileMenuContent: func.isRequired,\n  menuClassName: string,\n  popoverTrigger: oneOf(['click', 'hover', 'focus'])\n};\nResponsiveAntMenu.defaultProps = {\n  mobileBreakPoint: 575,\n  throttleViewportChange: 250,\n  placement: 'bottom',\n  closeOnClick: true,\n  popoverTrigger: 'click'\n};\nexport default ResponsiveAntMenu;","map":{"version":3,"sources":["/Users/nishapant/Documents/international_diamonds/client/src/components/Navbar/Navbar.js"],"names":["React","useEffect","useState","number","string","func","oneOfType","bool","oneOf","Popover","throttle","ResponsiveAntMenu","props","children","MenuMarkup","activeLinkKey","menuClassName","className","theme","mode","mobileMenuContent","placement","popoverTrigger","throttleViewportChange","mobileBreakPoint","closeOnClick","viewportWidth","setViewportWidth","isMenuShown","setIsMenuShown","isMobile","onLinkClick","window","innerWidth","throttledSetViewPortWidth","addEventListener","removeEventListener","MenuMarkupConfig","selectedKeys","menuToRender","cloneElement","propTypes","isRequired","closeOnMobileLinkClick","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { number, string, func, oneOfType, bool, oneOf } from 'prop-types';\nimport { Popover } from 'antd';\nimport throttle from 'lodash.throttle';\n\nconst ResponsiveAntMenu = (props) => {\n    const {\n        children: MenuMarkup, activeLinkKey, menuClassName: className,\n        theme, mode, mobileMenuContent, placement, popoverTrigger,\n        throttleViewportChange, mobileBreakPoint, closeOnClick\n    } = props;\n\n    const [viewportWidth, setViewportWidth] = useState(0);\n    const [isMenuShown, setIsMenuShown] = useState(false);\n    const isMobile = () => viewportWidth < mobileBreakPoint;\n    const onLinkClick = () => () => isMobile() && closeOnClick ? setIsMenuShown(false) : null;\n\n    useEffect(() => {\n        setViewportWidth(window.innerWidth);\n        const throttledSetViewPortWidth = throttle(() => setViewportWidth(window.innerWidth), throttleViewportChange);\n        window.addEventListener('resize', throttledSetViewPortWidth);\n\n        return () => window.removeEventListener('resize', throttledSetViewPortWidth);\n    }, []);\n\n    const MenuMarkupConfig = {\n        theme: !theme ? 'light' : typeof theme === 'function' ? theme(isMobile()) : theme,\n        mode: !mode ? 'horizontal' : typeof mode === 'function' ? mode(isMobile()) : mode,\n        selectedKeys: [`${activeLinkKey}`],\n        className,\n    };\n\n    const menuToRender = React.cloneElement(MenuMarkup(onLinkClick()), MenuMarkupConfig);\n\n    return isMobile() ?\n        <Popover\n            content={menuToRender}\n            trigger={popoverTrigger}\n            placement={placement}\n            visible={isMenuShown}\n            onVisibleChange={setIsMenuShown}\n        >\n            {mobileMenuContent(isMenuShown)}\n        </Popover> : menuToRender;\n};\n\nResponsiveAntMenu.propTypes = {\n    children: func.isRequired,\n    mobileBreakPoint: number,\n    closeOnMobileLinkClick: bool,\n    throttleViewportChange: number,\n    activeLinkKey: string,\n    placement: string,\n    theme: func,\n    mode: oneOfType([\n        func,\n        string\n    ]),\n    mobileMenuContent: func.isRequired,\n    menuClassName: string,\n    popoverTrigger: oneOf(['click', 'hover', 'focus'])\n};\n\nResponsiveAntMenu.defaultProps = {\n    mobileBreakPoint: 575,\n    throttleViewportChange: 250,\n    placement: 'bottom',\n    closeOnClick: true,\n    popoverTrigger: 'click',\n};\n\nexport default ResponsiveAntMenu;"]},"metadata":{},"sourceType":"module"}